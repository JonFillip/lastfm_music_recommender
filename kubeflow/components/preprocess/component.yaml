name: Preprocess Data
description: Preprocesses the input data for the music recommender system

inputs:
  - {name: input_data, type: Dataset, description: 'Input dataset to preprocess'}

outputs:
  - {name: output_data, type: Dataset, description: 'Preprocessed output dataset'}
  - {name: num_samples, type: Integer, description: 'Number of samples in the preprocessed dataset'}
  - {name: num_features, type: Integer, description: 'Number of features in the preprocessed dataset'}

implementation:
  container:
    image: python:3.9
    command:
      - python
      - -c
      - |
        from kubeflow.components.preprocess.preprocess import preprocess
        import argparse

        parser = argparse.ArgumentParser(description='Preprocess component for Kubeflow')
        parser.add_argument('--input_data', type=str)
        parser.add_argument('--output_data', type=str)
        parser.add_argument('--num_samples', type=str)
        parser.add_argument('--num_features', type=str)
        args = parser.parse_args()

        outputs = preprocess(input_data=args.input_data, output_data=args.output_data)
        
        print(f"Number of samples: {outputs.num_samples}")
        print(f"Number of features: {outputs.num_features}")

        # Write outputs
        with open(args.num_samples, 'w') as f:
            f.write(str(outputs.num_samples))
        with open(args.num_features, 'w') as f:
            f.write(str(outputs.num_features))

    args:
      - --input_data
      - {inputPath: input_data}
      - --output_data
      - {outputPath: output_data}
      - --num_samples
      - {outputPath: num_samples}
      - --num_features
      - {outputPath: num_features}
